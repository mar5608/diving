@use "global" as *;

.voice {
  position: relative;
  padding-top: rem(strip-unit(80px));
  // padding-bottom: rem(strip-unit(84px));
  @include mq("md") {
    padding-top: rem(strip-unit(138px));
    // padding-bottom: rem(strip-unit(102px));
  }
}

.voice__decoration {
  display: none;
  @include mq("md") {
    display: block;
    position: absolute;
  }
}

.voice__decoration--top {
  @include mq("md") {
    top: rem(strip-unit(18px));
    // left: rem(strip-unit(112px));
    left: calc(
      50% - clamp(23.125rem, 5.268rem + 37.2vw, 38.75rem)
    ); //370px->620px | 768px ->1440 px

    width: rem(strip-unit(301px));
    height: rem(strip-unit(138px));
  }
}

.voice__decoration--bottom {
  @include mq("md") {
    bottom: rem(strip-unit(30px));
    // right: rem(strip-unit(180px));
    left: calc(
      50% + clamp(19.25rem, 7.536rem + 24.4vw, 29.5rem)
    ); //308px->472px | 768px ->1440 px
    width: rem(strip-unit(71px));
    height: rem(strip-unit(162px));
  }
}

.voice__wrapper {
  margin-top: rem(strip-unit(43px));
  @include mq("md") {
    margin-top: rem(strip-unit(30px));
  }
}

.voice__cards {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: rem(strip-unit(40px));
  @include mq("md") {
    // flex-direction: row;
    // flex-wrap: wrap; // ★ ここが重要！折り返しを有効にする
    // justify-content: center; // 中央揃え（optional）
    // gap: rem(strip-unit(80px));
    align-items: stretch; // ← MDでも高さ揃えるため
    // flex-direction: row; //4カラム以上に対応するためコメントアウト
    display: grid;
    // grid-template-columns: repeat(auto-fit, minmax(520px, 1fr));
    grid-template-columns: repeat(2, 1fr);
    gap: rem(strip-unit(40px));
  }
}

.voice__card {
  display: flex;
  flex-direction: column;
  gap: rem(strip-unit(15px));
  // width: rem(strip-unit(345px));
  background: $white;
  box-shadow: 2px 2px 10px 0px rgba(0, 0, 0, 0.25);
  padding-top: rem(strip-unit(15px));
  padding-bottom: rem(strip-unit(24px));
  padding-inline: rem(strip-unit(15px));
  @include mq("md") {
    // width: rem(strip-unit(520px));
    padding-top: rem(strip-unit(26px));
    padding-inline: rem(strip-unit(24px));
    gap: rem(strip-unit(40px));
    // 高さ揃えのために全体で伸びる
    // height: 100%;
    // flex: 1; // ★ カードの高さを均等に伸ばす
    // width: calc((100% - #{rem(strip-unit(40px))}) / 2); // ★ 2枚並ぶ幅
    // max-width: rem(strip-unit(520px));
  }
}
.voice__container {
  display: flex;
  flex-direction: row;
  gap: rem(strip-unit(9px));
  @include mq("md") {
    gap: rem(strip-unit(15px));
    // 残りのスペースを使う
    flex-grow: 0;
  }
}

.voice__contents {
  display: flex;
  flex-direction: column;
  gap: rem(strip-unit(3px));
  width: 50%;
  border-bottom: 1px solid $d-green;
  @include mq("md") {
    justify-content: end;
    flex-grow: 1; // 残りの余白を埋める
    // width: auto; // 必要に応じて幅を自動調整
    // padding-left: rem(strip-unit(48px));
    align-self: flex-end; // 親がflexコンテナの場合
    gap: rem(strip-unit(11px));
  }
}
.voice__meta {
  display: flex;
  flex-direction: column;
  @include mq("md") {
    flex-direction: row;
    align-items: center;
    justify-content: space-between;

    // gap: rem(strip-unit(12px)); // 横の余白を gap で制御
    // justify-content: flex-start; // ← ここがポイント！両端ではなく左寄せにする
    // flex-wrap: wrap; // もし狭い場合折り返す
  }
}

.voice__head {
  color: var(--green, #0d2936);
  font-size: rem(strip-unit(16px));
  font-weight: $medium;
  line-height: 1.2; /* % オリジナル*/
  padding-bottom: rem(strip-unit(17px));
  @include mq("md") {
    font-size: rem(strip-unit(24px));
    // line-height: 1.2; /* 24px 120% */
    padding-bottom: rem(strip-unit(4px));
    line-height: 1.38; /* % オリジナル*/
  }
}

.voice__profile {
  font-size: rem(strip-unit(12px));
  line-height: 1.5; /* 18px 150% */
  @include mq(md) {
    align-self: flex-end; // 親がflexコンテナの場合
  }
}

.voice__tag {
  display: inline-block;
  color: $d-green;
  font-size: rem(strip-unit(12px));
  line-height: 1.83333; /* 22px 183.333% */
  padding-top: rem(strip-unit(4px));
  padding-bottom: rem(strip-unit(2px));
  padding-inline: rem(strip-unit(12px));
  border: 1px solid $d-green;

  width: auto; // 自動幅指定（明示的に追加）
  white-space: nowrap; // テキストが折り返されないようにする
  flex-shrink: 0; // 親がflexのため、縮まないように防止
  align-self: flex-start; // 必要に応じて配置を調整
  //   white-space: nowrap; // テキストを折り返さず一行に
  //   flex: 0 0 auto; // ←これが超重要！親がflexでも横に広がらないように完全に防止
  @include mq(md) {
    // margin-right: rem(strip-unit(8px));
    padding-top: rem(strip-unit(5px));
    padding-bottom: rem(strip-unit(7px));
    padding-inline: rem(strip-unit(15px));
  }
}

.voice__img {
  width: 50%;
  max-width: rem(strip-unit(180px));
  align-self: flex-end; // 親がflexコンテナの場合

  img {
    width: 100%;
    aspect-ratio: 151/117;
    object-fit: cover;
  }
  @include mq("md") {
    width: calc(180px / 472px * 100%);
    img {
      width: 100%;
      aspect-ratio: 180/140;
      object-fit: cover;
    }
  }
}

.voice__text {
  @include mq(md) {
    // margin-top: auto; // ← カード下部に常に配置
  }
}

.voice__button {
  margin-top: rem(strip-unit(39px));
  padding-right: rem(strip-unit(4px));
  @include mq("md") {
    margin-top: rem(strip-unit(80px));
  }
}
